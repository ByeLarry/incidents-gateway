{
  "openapi": "3.0.0",
  "paths": {
    "/api/auth/signup": {
      "post": {
        "operationId": "UserController_signup",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/auth/signin": {
      "post": {
        "operationId": "UserController_signin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/auth/me": {
      "get": {
        "operationId": "UserController_me",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/auth/refresh": {
      "post": {
        "operationId": "UserController_refreshTokens",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/auth/logout": {
      "post": {
        "operationId": "UserController_logout",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/auth": {
      "delete": {
        "operationId": "UserController_delete",
        "parameters": [
          {
            "name": "authorization",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/auth/admin/users/pagination": {
      "get": {
        "operationId": "AdminController_getUsers",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/auth/admin/block": {
      "patch": {
        "operationId": "AdminController_blockUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserIdDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/auth/admin/unblock": {
      "patch": {
        "operationId": "AdminController_unblockUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserIdDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/auth/admin": {
      "patch": {
        "operationId": "AdminController_updateAdmin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAdminDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/auth/admin/create-user": {
      "post": {
        "operationId": "AdminController_createUserByAdmin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/auth/admin/{id}": {
      "delete": {
        "operationId": "AdminController_deleteUserByAdmin",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/auth/admin/add": {
      "patch": {
        "operationId": "AdminController_addAdminRoleToUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAdminDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/auth/admin/stats": {
      "get": {
        "operationId": "AdminController_getStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/auth/admin/search": {
      "get": {
        "operationId": "AdminController_search",
        "parameters": [
          {
            "name": "query",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/auth/admin/login": {
      "post": {
        "operationId": "AdminController_adminLogin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminLoginDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Admin"
        ]
      }
    },
    "/api/auth/admin/reindex": {
      "put": {
        "operationId": "AdminController_reindexSearchEngine",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/auth/google": {
      "get": {
        "operationId": "ProvidersController_googleAuth",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Providers"
        ]
      }
    },
    "/api/auth/google/callback": {
      "get": {
        "operationId": "ProvidersController_googleAuthCallback",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Providers"
        ]
      }
    },
    "/api/auth/google/success": {
      "get": {
        "operationId": "ProvidersController_googleSuccess",
        "parameters": [
          {
            "name": "token",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "surname",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Providers"
        ]
      }
    },
    "/api/auth/yandex": {
      "get": {
        "operationId": "ProvidersController_yandexAuth",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Providers"
        ]
      }
    },
    "/api/auth/yandex/callback": {
      "get": {
        "operationId": "ProvidersController_yandexAuthCallback",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Providers"
        ]
      }
    },
    "/api/auth/yandex/success": {
      "get": {
        "operationId": "ProvidersController_yandexSuccess",
        "parameters": [
          {
            "name": "token",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "surname",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Providers"
        ]
      }
    },
    "/api/marks/one": {
      "get": {
        "operationId": "MarkController_getMark",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Marks"
        ]
      }
    },
    "/api/marks": {
      "get": {
        "operationId": "MarkController_getMarks",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Marks"
        ]
      }
    },
    "/api/marks/verify": {
      "post": {
        "operationId": "MarkController_verifyTrue",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyMarkDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Marks"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/marks/unverify": {
      "post": {
        "operationId": "MarkController_verifyFalse",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyMarkDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Marks"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/marks/create": {
      "post": {
        "operationId": "MarkController_createMark",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMarkDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Marks"
        ]
      }
    },
    "/api/marks/admin/all": {
      "get": {
        "operationId": "MarkController_getAllMarks",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Marks"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/marks/admin/{id}": {
      "delete": {
        "operationId": "MarkController_deleteMark",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Marks"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/marks/search": {
      "get": {
        "operationId": "MarkController_search",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Marks"
        ]
      }
    },
    "/api/marks/admin/reindex": {
      "put": {
        "operationId": "MarkController_reindexSearhchEngine",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Marks"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/categories": {
      "get": {
        "operationId": "CategoriesController_getCategories",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Categories"
        ]
      },
      "delete": {
        "operationId": "CategoriesController_deleteCategory",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "CategoriesController_updateCategory",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/categories/pagination": {
      "get": {
        "operationId": "CategoriesController_getCategoriesWithPagination",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Categories"
        ]
      }
    },
    "/api/categories/create": {
      "post": {
        "operationId": "CategoriesController_createCategory",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/categories/stats": {
      "get": {
        "operationId": "CategoriesController_getStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/categories/search": {
      "get": {
        "operationId": "CategoriesController_search",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/categories/clear-cache": {
      "get": {
        "operationId": "CategoriesController_clearCache",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/categories/admin/reindex": {
      "put": {
        "operationId": "CategoriesController_reindexSearhchEngine",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Categories"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Incidents API",
    "description": "",
    "version": "0.1.1",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "in": "header",
        "type": "http"
      }
    },
    "schemas": {
      "SignUpDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя пользователя",
            "example": "Иван",
            "minLength": 3,
            "maxLength": 100
          },
          "password": {
            "type": "string",
            "description": "Пароль пользователя",
            "example": "password123",
            "minLength": 8,
            "maxLength": 100
          },
          "email": {
            "type": "string",
            "description": "Электронная почта пользователя",
            "example": "user@example.com",
            "minLength": 3,
            "maxLength": 100
          },
          "surname": {
            "type": "string",
            "description": "Фамилия пользователя",
            "example": "Иванов",
            "minLength": 3,
            "maxLength": 100
          },
          "recaptchaToken": {
            "type": "string",
            "description": "Токен reCAPTCHA для проверки",
            "example": "03AGdBq24..."
          }
        },
        "required": [
          "name",
          "password",
          "email",
          "surname",
          "recaptchaToken"
        ]
      },
      "SignInDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Электронная почта пользователя для входа в систему",
            "example": "user@example.com",
            "minLength": 3,
            "maxLength": 100
          },
          "password": {
            "type": "string",
            "description": "Пароль пользователя для входа в систему",
            "example": "password123",
            "minLength": 8,
            "maxLength": 100
          },
          "recaptchaToken": {
            "type": "string",
            "description": "Токен reCAPTCHA для подтверждения, что запрос сделан реальным пользователем",
            "example": "03AGdBq24..."
          }
        },
        "required": [
          "email",
          "password",
          "recaptchaToken"
        ]
      },
      "UserIdDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор пользователя",
            "example": "12345"
          }
        },
        "required": [
          "id"
        ]
      },
      "UpdateAdminDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Уникальный идентификатор администратора",
            "example": "12345"
          },
          "name": {
            "type": "string",
            "description": "Имя администратора",
            "example": "Иван"
          },
          "surname": {
            "type": "string",
            "description": "Фамилия администратора",
            "example": "Иванов"
          },
          "email": {
            "type": "string",
            "description": "Электронная почта администратора",
            "example": "ivan.ivanov@example.com"
          },
          "phone_number": {
            "type": "string",
            "description": "Номер телефона администратора в формате России",
            "example": "+7 900 000-00-00"
          }
        },
        "required": [
          "id",
          "name",
          "surname",
          "email",
          "phone_number"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Электронная почта пользователя",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "description": "Пароль пользователя (минимум 8 символов)",
            "example": "password123"
          },
          "name": {
            "type": "string",
            "description": "Имя пользователя",
            "example": "Иван"
          },
          "surname": {
            "type": "string",
            "description": "Фамилия пользователя",
            "example": "Иванов"
          }
        },
        "required": [
          "email",
          "password",
          "name",
          "surname"
        ]
      },
      "AddAdminDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Идентификатор пользователя, которого нужно назначить администратором",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        },
        "required": [
          "id"
        ]
      },
      "AdminLoginDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Имя администратора",
            "example": "Иван"
          },
          "surname": {
            "type": "string",
            "description": "Фамилия администратора",
            "example": "Иванов"
          },
          "password": {
            "type": "string",
            "description": "Пароль администратора",
            "example": "securePassword123"
          },
          "userAgent": {
            "type": "string",
            "description": "Информация о пользовательском агенте, которая может быть предоставлена (не обязательная)",
            "example": "Mozilla/5.0 (Windows NT 10.0; Win64; x64)"
          }
        },
        "required": [
          "name",
          "surname",
          "password"
        ]
      },
      "VerifyMarkDto": {
        "type": "object",
        "properties": {
          "markId": {
            "type": "number",
            "description": "Уникальный идентификатор метки, которую необходимо проверить",
            "example": 123
          },
          "userId": {
            "type": "string",
            "description": "Уникальный идентификатор пользователя, который выполняет проверку",
            "example": "f7f4b6c9-95be-45b9-bc24-1324f9dbecfd"
          }
        },
        "required": [
          "markId",
          "userId"
        ]
      },
      "AddressDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Более широкий адрес",
            "example": "Страна, Город"
          },
          "name": {
            "type": "string",
            "description": "Адрес",
            "example": "Улица, дом 12"
          }
        },
        "required": [
          "description",
          "name"
        ]
      },
      "CreateMarkDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Уникальный идентификатор пользователя, создающего метку",
            "example": "f7f4b6c9-95be-45b9-bc24-1324f9dbecfd"
          },
          "lat": {
            "type": "number",
            "description": "Широта места метки",
            "example": 52.52
          },
          "lng": {
            "type": "number",
            "description": "Долгота места метки",
            "example": 13.405
          },
          "title": {
            "type": "string",
            "description": "Название метки",
            "example": "Моя первая метка"
          },
          "description": {
            "type": "string",
            "description": "Описание метки",
            "example": "Это описание моей метки, которое может быть очень длинным, но не обязательным."
          },
          "categoryId": {
            "type": "number",
            "description": "Идентификатор категории метки",
            "example": 1
          },
          "address": {
            "description": "Адрес, связанный с меткой",
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressDto"
              }
            ]
          }
        },
        "required": [
          "userId",
          "lat",
          "lng",
          "title",
          "categoryId"
        ]
      },
      "CreateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Название категории. Это обязательное поле.",
            "example": "Еда"
          },
          "color": {
            "type": "string",
            "description": "Цвет категории (необязательное поле). Может быть использовано для визуального выделения категории.",
            "example": "blue"
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateCategoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор категории. Это обязательное поле.",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Новое название категории. Это обязательное поле.",
            "example": "Напитки"
          },
          "color": {
            "type": "string",
            "description": "Новый цвет категории (необязательное поле). Может быть использовано для визуального выделения.",
            "example": "green"
          }
        },
        "required": [
          "id",
          "name"
        ]
      }
    }
  }
}